<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans

      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">


    <bean id="quartzOrderService" class="cn.tc.ulife.platform.agent.tc.ulife.platform.QuartzService.impl.QuartzOrderServiceImpl"/>

    <!--  使用HessianServiceExporter 将普通bean导出成Hessian服务-->
    <bean name="/quartzOrderService" class="org.springframework.remoting.caucho.HessianServiceExporter">
        <!--  需要导出的目标bean-->
        <property name="service" ref="quartzOrderService"/>
        <!--  Hessian服务的接口-->
        <property name="serviceInterface" value="cn.tc.ulife.platform.server.remote.IQuartzOrderService"/>
    </bean>


    <context:component-scan base-package="cn.tc.ulife.platform.QuartzService.impl.*"/>
    <context:component-scan base-package="cn.tc.ulife.platform.quartzmanage.*"/>

    <!-- quartz持久化存储  -->
    <bean id="gSchedulerFactory"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">


        <property name="configLocation" value="classpath:/conf/quartz.properties"/>
        <property name="applicationContextSchedulerContextKey"
                  value="applicationContextKey"/>
        <property name="autoStartup" value="true"/>
    </bean>


    <bean id="quartzManager" class="cn.tc.ulife.platform.agent.tc.ulife.platform.quartzmanage.QuartzManager">
    </bean>
</beans>
